---
- name: Ensure hostname set
  hostname:
    name: "{{ inventory_hostname }}"
  when: not inventory_hostname is match('(\d{1,3}\.){3}\d{1,3}')
  register: hostname
  tags: hostname

- name: Ensure hostname is in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "^{{ ansible_default_ipv4.address }}.+$"
    line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"
  register: hostname
  tags: hostname

- name: set timezone to UTC
  timezone:
    name: UTC
  register: timezone

# TODO: enable wifi setting

# TODO login with password

# TODO
# - name: enable SSH
#   shell: sudo raspi-config nonint do_ssh 0


# TODO
# - name: Create ssh directory
#   file:
#     path: /home/pi/.ssh/
#     state: directory
#     owner: pi
#     group: pi
#     mode: 0700
# 
# - name: put public key
#   copy:
#     src: .pubkey
#     dest: /home/pi/.ssh/authorized_keys
#     owner: pi
#     group: pi
#     mode: 644

# TODO disable password

- name: Add values to cmdline.txt
  shell: sed -ie 's/rootwait/rootwait cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory/' /boot/cmdline.txt
  register: cmdline
  tags:
    - boot

- name: apt-get update
  apt:
    update_cache: yes
    autoclean: yes
    autoremove: yes
    cache_valid_time: 86400

- name: apt-get upgrade
  apt:
    upgrade: full

- name: Reboot
  shell: sleep 2 && shutdown -r now "Ansible Reboot"
  async: 1
  poll: 0
  ignore_errors: True
  when: cmdline or timezone or hostname is changed

- name: Wait for Reboot
  local_action: wait_for
  args:
    host: "{{ inventory_hostname }}.local"
    port: 22
    delay: 15
    timeout: 120
  become: False
